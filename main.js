(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o){var i=e.name,a=e.link,u=e.likes,c=e.owner,s=e.handleCardClick,l=e.cardDelete,f=e.elementLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=i,this._link=a,this._likes=u,this._owner=c._id,this._id=n,this._cardSelector=o,this._handleCardClick=s,this._cardDelete=l,this._elementLike=f,this._cardId=r}var n,r;return n=t,(r=[{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id==e._id}))}},{key:"_getLikeCounter",value:function(){this._element.querySelector(".element__like-counter").textContent=this._likes.length,this._likesToggle()}},{key:"_likesToggle",value:function(e){var t=this._element.querySelector(".element__content-like");this.isLiked(e)?t.classList.add("element__content-like_active"):t.classList.remove("element__content-like_active")}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){this._element=this._getTemplate();var e=this._element.querySelector(".element__image");return this._element.querySelector(".element__content-text").textContent=this._name,e.src=this._link,e.alt=this._name,this._element.querySelector(".element__content-text").textContent=this._name,this.setEventListeners(),this._getLikeCounter(),this._renderButtons(),this._element}},{key:"setLikes",value:function(e){this._likes=e.likes,this._getLikeCounter()}},{key:"cardRemove",value:function(){this._element.remove(),this._element=null}},{key:"id",value:function(){return this._cardId}},{key:"_renderButtons",value:function(){this._deletButton=this._element.querySelector(".element__content-basket"),this._id===this._owner?this._deletButton.classList.add("element__content-basket_visible"):this._deletButton.classList.add("element__content-basket_hidden")}},{key:"setEventListeners",value:function(){var e=this;this._element.querySelector(".element__image").addEventListener("click",(function(){e._handleCardClick(e._link,e._name)})),this._element.querySelector(".element__content-basket").addEventListener("click",(function(){e._cardDelete(e)})),this._element.querySelector(".element__content-like").addEventListener("click",(function(){e._elementLike(e)}))}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._array=r,this._renderer=o,this._container=document.querySelector(n)}var t,r;return t=e,(r=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(){var e=this;this._array.forEach((function(t){e._renderer(t)}))}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this.closeButton=this._popup.querySelector(".popup__close-button"),this._submitButton=this._popup.querySelector(".popup__save-button"),this.close=this.close.bind(this),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_closeOverlay",value:function(e){e.target.classList.contains("popup")&&this.close()}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){this.closeButton.addEventListener("click",this.close.bind(this)),this._popup.addEventListener("click",this._closeOverlay.bind(this))}},{key:"loading",value:function(e){this._submitButton.textContent=e?"Сохранение...":"Сохранить"}}])&&o(t.prototype,n),e}();function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=f(r);if(o){var n=f(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return l(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupImage=t._popup.querySelector(".popup__image"),t._popupTitle=t._popup.querySelector(".popup__title_image"),t}return t=a,(n=[{key:"open",value:function(e,t){c(f(a.prototype),"open",this).call(this),this._popupImage.src=e,this._popupImage.alt="Фото: ".concat(t),this._popupTitle.textContent=t}}])&&u(t.prototype,n),a}(i);function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return(_="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=v(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function y(e,t){return(y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function m(e,t){return!t||"object"!==h(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function v(e){return(v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&y(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=v(r);if(o){var n=v(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return m(this,e)});function a(e){var t,n=e.handleFormSubmit,r=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,r)).handleFormSubmit=n,t._form=t._popup.querySelector(".form"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._form.querySelectorAll(".form__input"),this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;_(v(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){_(v(a.prototype),"close",this).call(this),this._form.reset()}}])&&d(t.prototype,n),a}(i);function k(e){return(k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(e,t,n){return(S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function E(e,t){return!t||"object"!==k(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function O(e){return(O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._handleSubmit=t._popup.querySelector(".form"),t}return t=a,(n=[{key:"handleSubmit",value:function(e){this._handleSubmitForm=e}},{key:"setEventListeners",value:function(){var e=this;S(O(a.prototype),"setEventListeners",this).call(this),this._handleSubmit.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitForm()}))}}])&&g(t.prototype,n),a}(i);function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=n,this._aboutName=r,this._userAvatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._userProfileData={},this._userProfileData.name=this._userName.textContent,this._userProfileData.about=this._aboutName.textContent,this._userProfileData}},{key:"setUserInfo",value:function(e,t,n,r){this._userName.textContent=e,this._aboutName.textContent=t,this._userId=n,this._userAvatar.src=r}}])&&L(t.prototype,n),e}();function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.name,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.name,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._inputSelector)),n=this._formElement.querySelector(this._submitButtonSelector);this._submitButton(t,n),t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r),e._submitButton(t,n)}))}))}},{key:"_submitButton",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("sumbit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&j(t.prototype,n),e}();function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(e){return e.ok?e.json():Promise.reject("ASHIPKA: ".concat(e.status))},T=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this.headers=t.headers,this._authorization=t.headers.authorization,this._contentType=t.headers["Content-type"]}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this.headers}).then(R)}},{key:"addNewCards",value:function(e){var t=e.name,n=e.link;return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:t,link:n})}).then(R)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then(R)}},{key:"addLike",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then(R)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then(R)}},{key:"changeAvatar",value:function(e){var t=e.avatar;return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t})}).then(R)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me/"),{method:"GET",headers:this.headers}).then(R)}},{key:"changeUserInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this._url,"/users/me/"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t,about:n})}).then(R)}}])&&q(t.prototype,n),e}(),D={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},B=document.forms.formProfile,x=(new I(D,B),document.querySelector(".popup_type_profile")),A=B.elements.nameProfile,N=B.elements.aboutProfile,U=document.forms.formPlace,V=(new I(D,U),document.querySelector(".popup_type_card")),F=(U.elements.name,U.elements.link,document.querySelector(".popup_type_image")),z=document.querySelector(".popup_type_delete"),H=document.forms.formAvatar,J=(new I(D,H),document.querySelector(".popup_type_avatar")),G=(H.elements.name,document.querySelector(".profile__edit-button")),M=document.querySelector(".profile__button"),K=document.querySelector(".profile__image-edit"),$=(x.querySelector(".popup__close-button"),V.querySelector(".popup__close-button"),V.querySelector(".popup__save-button"),x.querySelector(".popup__save-button"),z.querySelector(".popup__close-button"),document.querySelector(".profile__info-title")),Q=document.querySelector(".profile__description"),W=document.querySelector(".profile__image");function X(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Y(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?X(Object(n),!0).forEach((function(t){Z(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):X(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Z(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ee(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var te=new T({url:"https://mesto.nomoreparties.co/v1/cohort-17",headers:{authorization:"3edb3715-d2b8-46c3-8d1b-ee5c4e7c3cc4","Content-Type":"application/json"}});Promise.all([te.getUserInfo(),te.getInitialCards()]).then((function(e){var n,o,i=(o=2,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}}(n,o)||function(e,t){if(e){if("string"==typeof e)return ee(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ee(e,t):void 0}}(n,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=i[0],u=i[1],c=new P({name:$,about:Q,avatar:W});c.setUserInfo(a.name,a.about,a._id,a.avatar);var s=function(e){e.isLiked()?te.deleteLike(e._cardId).then((function(t){e.setLikes(t)})).catch((function(e){console.log(e)})):te.addLike(e._cardId).then((function(t){e.setLikes(t)})).catch((function(e){console.log(e)}))},l=function(e){_.open(),_.handleSubmit((function(){te.deleteCard(e._cardId).then((function(t){e.cardRemove(t),_.close()})).catch((function(e){console.log(e)}))}))},f=new b({popupSelector:x,handleFormSubmit:function(e){var t=e.nameProfile,n=e.aboutProfile;f.loading(!0),te.changeUserInfo({name:t,about:n}).then((function(e){c.setUserInfo(e.name,e.about,e._id,e.avatar),f.close()})).catch((function(e){return console.log("Error ".concat(e))})).finally((function(){f.loading(!1)}))}});f.setEventListeners();var h=new b({popupSelector:V,handleFormSubmit:function(e){var t=e.namePlace,n=e.aboutPlace;h.loading(!0),te.addNewCards({name:t,link:n}).then((function(e){m(e),h.close()})).catch((function(e){return console.log("Error ".concat(e))})).finally((function(){h.loading(!1)}))}});h.setEventListeners();var d=new b({popupSelector:J,handleFormSubmit:function(e){var t=e.avatar;d.loading(!0),te.changeAvatar({avatar:t}).then((function(e){c.setUserInfo(e.name,e.about,e._id,e.avatar),d.close()})).catch((function(e){return console.log("Error ".concat(e))})).finally((function(){d.loading(!1)}))}});d.setEventListeners();var _=new C(z);function y(e,t){v.open(e,t)}function m(e){var n=new t(Y(Y({},e),{},{handleCardClick:y,cardDelete:l,elementLike:s}),a._id,e._id,"#card"),r=n.generateCard();return k.addItem(r),n}_.setEventListeners();var v=new p(F);v.setEventListeners(),M.addEventListener("click",(function(){h.open()})),G.addEventListener("click",(function(){var e=c.getUserInfo();A.value=e.name,N.value=e.about,f.open()})),K.addEventListener("click",(function(){d.open()}));var k=new r({items:u.reverse(),renderer:function(e){m(e)}},".elements__list");k.renderItems(),new I(D,V).enableValidation(),new I(D,x).enableValidation(),new I(D,J).enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,